# name: Flutter CI

# # This workflow is triggered on pushes to the repository.

# on:
#   push:
#     branches:
#     - main

# # on: push    # Default will running for every branch.

# jobs:
#   build:
#     # This job will run on ubuntu virtual machine
#     runs-on: ubuntu-latest
#     steps:

#     # Setup Java environment in order to build the Android app.
#     - uses: actions/checkout@v1
#     - uses: actions/setup-java@v1
#       with:
#         java-version: '17.x'

#     # Setup the flutter environment.
#     - uses: subosito/flutter-action@v1
#       with:
#         channel: 'stable' # 'dev', 'alpha', default to: 'stable'
#         flutter-version: 3.22.1
#         # flutter-version: '1.12.x' # you can also specify exact version of flutter
#     - env:
#        API_KEY: ${ secrets.OPENAI_API_KEY } {}

#     # Get flutter dependencies.
#     - run: flutter pub get

#     # Set environment variable and run build
#     - run: echo '$env:API_KEY' > .env
#     - run: dart run build_runner build

#     # Statically analyze the Dart code for any errors.
#     # - run: flutter analyze .
#     # Bypassing this for now, enable once we achieved prod status

#     # Run widget tests for our flutter project.
#     # - run: flutter test
#     # No tests has been implemented yet, skipping

#     # Build apk.
#     - run: flutter build apk

#     # Upload generated apk to the artifacts.
#     - uses: actions/upload-artifact@v1
#       with:
#         name: release-apk
#         path: build/app/outputs/apk/release/app-release.apk

name: Flutter CI

# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
      - main

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v1

      # Setup Java environment in order to build the Android app.
      - uses: actions/setup-java@v1
        with:
          java-version: "17.x"

      # Setup the Flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          flutter-version: "3.24.2"

      # Get flutter dependencies.
      - run: flutter pub get

      # Set environment variable
      - name: Set API Key
        run: echo "API_KEY=${{ secrets.OPEN_AI_API_KEY }}" >> .env

      # Run build_runner to generate code
      # - run: dart run build_runner build

      # Build the APK
      - run: flutter build apk --debug --split-per-abi

      # Upload generated APK to the artifacts.
      - name: Push to releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*.apk"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}
